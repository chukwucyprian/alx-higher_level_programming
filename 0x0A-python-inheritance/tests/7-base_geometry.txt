===========================
7-base_geometry Module Test
============================ 
 """
 >>> BaseGeometry = _import_('7-base_geometry').BaseGeometry
 >>> bg = BaseGeometry()
 >>>
 >>> bg.integer_validator("my_int", 12)
 >>> bg.integer_validator("width", 89)
 >>>
 >>> try:
 ...     bg.integer_validator("name", "John")
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ...
 [TypeError] name must be an integer
 >>> try:
 ...     bg.integer_validator("age", 0)
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ...
 [ValueError] age must be greater than 0
 >>> try:
 ...     bg.integer_validator("distance", -4)
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ...
 [ValueError] distance must be greater than 0
 >>> try:
 ...     bg.integer_validator("name", 3.5)
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ...
 [TypeError] name must be an integer
 >>> try:
 ...     bg.integer_validator(34, 0)
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ...
 [ValueError] 34 must be greater than 0
 >>> try:
 ...     bg.integer_validator("distance", -4)
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ...
 [ValueError] distance must be greater than 0
 >>> try:
 ...     bg.integer_validator("distance", 100)
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ...
 >>> bg = BaseGeometry("leo")
 Traceback (most recent call last):
 ...
 TypeError: BaseGeometry() takes no arguments
 >>> bg = BaseGeometry(23)
 Traceback (most recent call last):
 ...
 TypeError: BaseGeometry() takes no arguments
 >>> bg = BaseGeometry()
 >>> try:
 ...     bg.integer_validator(24, 24)
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ... 
 >>> try:
 ...     bg.integer_validator("leo", 24)
 ... except Exception as e:
 ...     print("[{}] {}".format(e._class.__name_, e))
 ... 
 >>>
 """
